// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lexicon.proto

package zemberek.morphology.lexicon.proto;

public final class LexiconProto {
  private LexiconProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Keep in synnc with zemberek.core.turkish.PrimaryPos
   * </pre>
   *
   * Protobuf enum {@code PrimaryPos}
   */
  public enum PrimaryPos
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PrimaryPos_Unknown = 0;</code>
     */
    PrimaryPos_Unknown(0),
    /**
     * <code>Noun = 1;</code>
     */
    Noun(1),
    /**
     * <code>Adjective = 2;</code>
     */
    Adjective(2),
    /**
     * <code>Adverb = 3;</code>
     */
    Adverb(3),
    /**
     * <code>Conjunction = 4;</code>
     */
    Conjunction(4),
    /**
     * <code>Interjection = 5;</code>
     */
    Interjection(5),
    /**
     * <code>Verb = 6;</code>
     */
    Verb(6),
    /**
     * <code>Pronoun = 7;</code>
     */
    Pronoun(7),
    /**
     * <code>Numeral = 8;</code>
     */
    Numeral(8),
    /**
     * <code>Determiner = 9;</code>
     */
    Determiner(9),
    /**
     * <code>PostPositive = 10;</code>
     */
    PostPositive(10),
    /**
     * <code>Question = 11;</code>
     */
    Question(11),
    /**
     * <code>Duplicator = 12;</code>
     */
    Duplicator(12),
    /**
     * <code>Punctuation = 13;</code>
     */
    Punctuation(13),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PrimaryPos_Unknown = 0;</code>
     */
    public static final int PrimaryPos_Unknown_VALUE = 0;
    /**
     * <code>Noun = 1;</code>
     */
    public static final int Noun_VALUE = 1;
    /**
     * <code>Adjective = 2;</code>
     */
    public static final int Adjective_VALUE = 2;
    /**
     * <code>Adverb = 3;</code>
     */
    public static final int Adverb_VALUE = 3;
    /**
     * <code>Conjunction = 4;</code>
     */
    public static final int Conjunction_VALUE = 4;
    /**
     * <code>Interjection = 5;</code>
     */
    public static final int Interjection_VALUE = 5;
    /**
     * <code>Verb = 6;</code>
     */
    public static final int Verb_VALUE = 6;
    /**
     * <code>Pronoun = 7;</code>
     */
    public static final int Pronoun_VALUE = 7;
    /**
     * <code>Numeral = 8;</code>
     */
    public static final int Numeral_VALUE = 8;
    /**
     * <code>Determiner = 9;</code>
     */
    public static final int Determiner_VALUE = 9;
    /**
     * <code>PostPositive = 10;</code>
     */
    public static final int PostPositive_VALUE = 10;
    /**
     * <code>Question = 11;</code>
     */
    public static final int Question_VALUE = 11;
    /**
     * <code>Duplicator = 12;</code>
     */
    public static final int Duplicator_VALUE = 12;
    /**
     * <code>Punctuation = 13;</code>
     */
    public static final int Punctuation_VALUE = 13;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PrimaryPos valueOf(int value) {
      return forNumber(value);
    }

    public static PrimaryPos forNumber(int value) {
      switch (value) {
        case 0: return PrimaryPos_Unknown;
        case 1: return Noun;
        case 2: return Adjective;
        case 3: return Adverb;
        case 4: return Conjunction;
        case 5: return Interjection;
        case 6: return Verb;
        case 7: return Pronoun;
        case 8: return Numeral;
        case 9: return Determiner;
        case 10: return PostPositive;
        case 11: return Question;
        case 12: return Duplicator;
        case 13: return Punctuation;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PrimaryPos>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PrimaryPos> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PrimaryPos>() {
            public PrimaryPos findValueByNumber(int number) {
              return PrimaryPos.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final PrimaryPos[] VALUES = values();

    public static PrimaryPos valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PrimaryPos(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PrimaryPos)
  }

  /**
   * <pre>
   * Keep in sync with zemberek.core.turkish.SecondaryPos
   * </pre>
   *
   * Protobuf enum {@code SecondaryPos}
   */
  public enum SecondaryPos
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SecondaryPos_Unknown = 0;</code>
     */
    SecondaryPos_Unknown(0),
    /**
     * <code>DemonstrativePron = 1;</code>
     */
    DemonstrativePron(1),
    /**
     * <code>Time = 2;</code>
     */
    Time(2),
    /**
     * <code>QuantitivePron = 3;</code>
     */
    QuantitivePron(3),
    /**
     * <code>QuestionPron = 4;</code>
     */
    QuestionPron(4),
    /**
     * <code>ProperNoun = 5;</code>
     */
    ProperNoun(5),
    /**
     * <code>PersonalPron = 6;</code>
     */
    PersonalPron(6),
    /**
     * <code>ReflexivePron = 7;</code>
     */
    ReflexivePron(7),
    /**
     * <code>None = 8;</code>
     */
    None(8),
    /**
     * <code>Ordinal = 9;</code>
     */
    Ordinal(9),
    /**
     * <code>Cardinal = 10;</code>
     */
    Cardinal(10),
    /**
     * <code>Percentage = 11;</code>
     */
    Percentage(11),
    /**
     * <code>Ratio = 12;</code>
     */
    Ratio(12),
    /**
     * <code>Range = 13;</code>
     */
    Range(13),
    /**
     * <code>Real = 14;</code>
     */
    Real(14),
    /**
     * <code>Distribution = 15;</code>
     */
    Distribution(15),
    /**
     * <code>Clock = 16;</code>
     */
    Clock(16),
    /**
     * <code>Date = 17;</code>
     */
    Date(17),
    /**
     * <code>RegularAbbreviation = 18;</code>
     */
    RegularAbbreviation(18),
    /**
     * <code>Abbreviation = 19;</code>
     */
    Abbreviation(19),
    /**
     * <code>Email = 20;</code>
     */
    Email(20),
    /**
     * <code>Url = 21;</code>
     */
    Url(21),
    /**
     * <code>Mention = 22;</code>
     */
    Mention(22),
    /**
     * <code>HashTag = 23;</code>
     */
    HashTag(23),
    /**
     * <code>Emoticon = 24;</code>
     */
    Emoticon(24),
    /**
     * <code>RomanNumeral = 25;</code>
     */
    RomanNumeral(25),
    /**
     * <pre>
     * Below POS information is for compatibility with K. Oflazer's notation.
     * They indicate that words before Post positive words should end with certain suffixes.
     * </pre>
     *
     * <code>PCDat = 50;</code>
     */
    PCDat(50),
    /**
     * <code>PCAcc = 51;</code>
     */
    PCAcc(51),
    /**
     * <code>PCIns = 52;</code>
     */
    PCIns(52),
    /**
     * <code>PCNom = 53;</code>
     */
    PCNom(53),
    /**
     * <code>PCGen = 54;</code>
     */
    PCGen(54),
    /**
     * <code>PCAbl = 55;</code>
     */
    PCAbl(55),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SecondaryPos_Unknown = 0;</code>
     */
    public static final int SecondaryPos_Unknown_VALUE = 0;
    /**
     * <code>DemonstrativePron = 1;</code>
     */
    public static final int DemonstrativePron_VALUE = 1;
    /**
     * <code>Time = 2;</code>
     */
    public static final int Time_VALUE = 2;
    /**
     * <code>QuantitivePron = 3;</code>
     */
    public static final int QuantitivePron_VALUE = 3;
    /**
     * <code>QuestionPron = 4;</code>
     */
    public static final int QuestionPron_VALUE = 4;
    /**
     * <code>ProperNoun = 5;</code>
     */
    public static final int ProperNoun_VALUE = 5;
    /**
     * <code>PersonalPron = 6;</code>
     */
    public static final int PersonalPron_VALUE = 6;
    /**
     * <code>ReflexivePron = 7;</code>
     */
    public static final int ReflexivePron_VALUE = 7;
    /**
     * <code>None = 8;</code>
     */
    public static final int None_VALUE = 8;
    /**
     * <code>Ordinal = 9;</code>
     */
    public static final int Ordinal_VALUE = 9;
    /**
     * <code>Cardinal = 10;</code>
     */
    public static final int Cardinal_VALUE = 10;
    /**
     * <code>Percentage = 11;</code>
     */
    public static final int Percentage_VALUE = 11;
    /**
     * <code>Ratio = 12;</code>
     */
    public static final int Ratio_VALUE = 12;
    /**
     * <code>Range = 13;</code>
     */
    public static final int Range_VALUE = 13;
    /**
     * <code>Real = 14;</code>
     */
    public static final int Real_VALUE = 14;
    /**
     * <code>Distribution = 15;</code>
     */
    public static final int Distribution_VALUE = 15;
    /**
     * <code>Clock = 16;</code>
     */
    public static final int Clock_VALUE = 16;
    /**
     * <code>Date = 17;</code>
     */
    public static final int Date_VALUE = 17;
    /**
     * <code>RegularAbbreviation = 18;</code>
     */
    public static final int RegularAbbreviation_VALUE = 18;
    /**
     * <code>Abbreviation = 19;</code>
     */
    public static final int Abbreviation_VALUE = 19;
    /**
     * <code>Email = 20;</code>
     */
    public static final int Email_VALUE = 20;
    /**
     * <code>Url = 21;</code>
     */
    public static final int Url_VALUE = 21;
    /**
     * <code>Mention = 22;</code>
     */
    public static final int Mention_VALUE = 22;
    /**
     * <code>HashTag = 23;</code>
     */
    public static final int HashTag_VALUE = 23;
    /**
     * <code>Emoticon = 24;</code>
     */
    public static final int Emoticon_VALUE = 24;
    /**
     * <code>RomanNumeral = 25;</code>
     */
    public static final int RomanNumeral_VALUE = 25;
    /**
     * <pre>
     * Below POS information is for compatibility with K. Oflazer's notation.
     * They indicate that words before Post positive words should end with certain suffixes.
     * </pre>
     *
     * <code>PCDat = 50;</code>
     */
    public static final int PCDat_VALUE = 50;
    /**
     * <code>PCAcc = 51;</code>
     */
    public static final int PCAcc_VALUE = 51;
    /**
     * <code>PCIns = 52;</code>
     */
    public static final int PCIns_VALUE = 52;
    /**
     * <code>PCNom = 53;</code>
     */
    public static final int PCNom_VALUE = 53;
    /**
     * <code>PCGen = 54;</code>
     */
    public static final int PCGen_VALUE = 54;
    /**
     * <code>PCAbl = 55;</code>
     */
    public static final int PCAbl_VALUE = 55;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecondaryPos valueOf(int value) {
      return forNumber(value);
    }

    public static SecondaryPos forNumber(int value) {
      switch (value) {
        case 0: return SecondaryPos_Unknown;
        case 1: return DemonstrativePron;
        case 2: return Time;
        case 3: return QuantitivePron;
        case 4: return QuestionPron;
        case 5: return ProperNoun;
        case 6: return PersonalPron;
        case 7: return ReflexivePron;
        case 8: return None;
        case 9: return Ordinal;
        case 10: return Cardinal;
        case 11: return Percentage;
        case 12: return Ratio;
        case 13: return Range;
        case 14: return Real;
        case 15: return Distribution;
        case 16: return Clock;
        case 17: return Date;
        case 18: return RegularAbbreviation;
        case 19: return Abbreviation;
        case 20: return Email;
        case 21: return Url;
        case 22: return Mention;
        case 23: return HashTag;
        case 24: return Emoticon;
        case 25: return RomanNumeral;
        case 50: return PCDat;
        case 51: return PCAcc;
        case 52: return PCIns;
        case 53: return PCNom;
        case 54: return PCGen;
        case 55: return PCAbl;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecondaryPos>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SecondaryPos> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecondaryPos>() {
            public SecondaryPos findValueByNumber(int number) {
              return SecondaryPos.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final SecondaryPos[] VALUES = values();

    public static SecondaryPos valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SecondaryPos(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SecondaryPos)
  }

  /**
   * <pre>
   * Keep in sync with zemberek.core.turkish.RootAttribute
   * </pre>
   *
   * Protobuf enum {@code RootAttribute}
   */
  public enum RootAttribute
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RootAttribute_Unknown = 0;</code>
     */
    RootAttribute_Unknown(0),
    /**
     * <code>Aorist_I = 1;</code>
     */
    Aorist_I(1),
    /**
     * <code>Aorist_A = 2;</code>
     */
    Aorist_A(2),
    /**
     * <code>ProgressiveVowelDrop = 3;</code>
     */
    ProgressiveVowelDrop(3),
    /**
     * <code>Passive_In = 4;</code>
     */
    Passive_In(4),
    /**
     * <code>Causative_t = 5;</code>
     */
    Causative_t(5),
    /**
     * <code>Voicing = 6;</code>
     */
    Voicing(6),
    /**
     * <code>NoVoicing = 7;</code>
     */
    NoVoicing(7),
    /**
     * <code>InverseHarmony = 8;</code>
     */
    InverseHarmony(8),
    /**
     * <code>Doubling = 9;</code>
     */
    Doubling(9),
    /**
     * <code>LastVowelDrop = 10;</code>
     */
    LastVowelDrop(10),
    /**
     * <code>CompoundP3sg = 11;</code>
     */
    CompoundP3sg(11),
    /**
     * <code>NoSuffix = 12;</code>
     */
    NoSuffix(12),
    /**
     * <code>NounConsInsert_n = 13;</code>
     */
    NounConsInsert_n(13),
    /**
     * <code>NoQuote = 14;</code>
     */
    NoQuote(14),
    /**
     * <code>CompoundP3sgRoot = 15;</code>
     */
    CompoundP3sgRoot(15),
    /**
     * <code>Reflexive = 16;</code>
     */
    Reflexive(16),
    /**
     * <code>Reciprocal = 17;</code>
     */
    Reciprocal(17),
    /**
     * <code>Ext = 18;</code>
     */
    Ext(18),
    /**
     * <code>Runtime = 29;</code>
     */
    Runtime(29),
    /**
     * <code>Dummy = 20;</code>
     */
    Dummy(20),
    /**
     * <code>NonReciprocal = 21;</code>
     */
    NonReciprocal(21),
    /**
     * <code>ImplicitDative = 22;</code>
     */
    ImplicitDative(22),
    /**
     * <code>ImplicitPlural = 23;</code>
     */
    ImplicitPlural(23),
    /**
     * <code>ImplicitP1sg = 24;</code>
     */
    ImplicitP1sg(24),
    /**
     * <code>ImplicitP2sg = 25;</code>
     */
    ImplicitP2sg(25),
    /**
     * <code>FamilyMember = 26;</code>
     */
    FamilyMember(26),
    /**
     * <code>PronunciationGuessed = 27;</code>
     */
    PronunciationGuessed(27),
    /**
     * <code>Informal = 28;</code>
     */
    Informal(28),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RootAttribute_Unknown = 0;</code>
     */
    public static final int RootAttribute_Unknown_VALUE = 0;
    /**
     * <code>Aorist_I = 1;</code>
     */
    public static final int Aorist_I_VALUE = 1;
    /**
     * <code>Aorist_A = 2;</code>
     */
    public static final int Aorist_A_VALUE = 2;
    /**
     * <code>ProgressiveVowelDrop = 3;</code>
     */
    public static final int ProgressiveVowelDrop_VALUE = 3;
    /**
     * <code>Passive_In = 4;</code>
     */
    public static final int Passive_In_VALUE = 4;
    /**
     * <code>Causative_t = 5;</code>
     */
    public static final int Causative_t_VALUE = 5;
    /**
     * <code>Voicing = 6;</code>
     */
    public static final int Voicing_VALUE = 6;
    /**
     * <code>NoVoicing = 7;</code>
     */
    public static final int NoVoicing_VALUE = 7;
    /**
     * <code>InverseHarmony = 8;</code>
     */
    public static final int InverseHarmony_VALUE = 8;
    /**
     * <code>Doubling = 9;</code>
     */
    public static final int Doubling_VALUE = 9;
    /**
     * <code>LastVowelDrop = 10;</code>
     */
    public static final int LastVowelDrop_VALUE = 10;
    /**
     * <code>CompoundP3sg = 11;</code>
     */
    public static final int CompoundP3sg_VALUE = 11;
    /**
     * <code>NoSuffix = 12;</code>
     */
    public static final int NoSuffix_VALUE = 12;
    /**
     * <code>NounConsInsert_n = 13;</code>
     */
    public static final int NounConsInsert_n_VALUE = 13;
    /**
     * <code>NoQuote = 14;</code>
     */
    public static final int NoQuote_VALUE = 14;
    /**
     * <code>CompoundP3sgRoot = 15;</code>
     */
    public static final int CompoundP3sgRoot_VALUE = 15;
    /**
     * <code>Reflexive = 16;</code>
     */
    public static final int Reflexive_VALUE = 16;
    /**
     * <code>Reciprocal = 17;</code>
     */
    public static final int Reciprocal_VALUE = 17;
    /**
     * <code>Ext = 18;</code>
     */
    public static final int Ext_VALUE = 18;
    /**
     * <code>Runtime = 29;</code>
     */
    public static final int Runtime_VALUE = 29;
    /**
     * <code>Dummy = 20;</code>
     */
    public static final int Dummy_VALUE = 20;
    /**
     * <code>NonReciprocal = 21;</code>
     */
    public static final int NonReciprocal_VALUE = 21;
    /**
     * <code>ImplicitDative = 22;</code>
     */
    public static final int ImplicitDative_VALUE = 22;
    /**
     * <code>ImplicitPlural = 23;</code>
     */
    public static final int ImplicitPlural_VALUE = 23;
    /**
     * <code>ImplicitP1sg = 24;</code>
     */
    public static final int ImplicitP1sg_VALUE = 24;
    /**
     * <code>ImplicitP2sg = 25;</code>
     */
    public static final int ImplicitP2sg_VALUE = 25;
    /**
     * <code>FamilyMember = 26;</code>
     */
    public static final int FamilyMember_VALUE = 26;
    /**
     * <code>PronunciationGuessed = 27;</code>
     */
    public static final int PronunciationGuessed_VALUE = 27;
    /**
     * <code>Informal = 28;</code>
     */
    public static final int Informal_VALUE = 28;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RootAttribute valueOf(int value) {
      return forNumber(value);
    }

    public static RootAttribute forNumber(int value) {
      switch (value) {
        case 0: return RootAttribute_Unknown;
        case 1: return Aorist_I;
        case 2: return Aorist_A;
        case 3: return ProgressiveVowelDrop;
        case 4: return Passive_In;
        case 5: return Causative_t;
        case 6: return Voicing;
        case 7: return NoVoicing;
        case 8: return InverseHarmony;
        case 9: return Doubling;
        case 10: return LastVowelDrop;
        case 11: return CompoundP3sg;
        case 12: return NoSuffix;
        case 13: return NounConsInsert_n;
        case 14: return NoQuote;
        case 15: return CompoundP3sgRoot;
        case 16: return Reflexive;
        case 17: return Reciprocal;
        case 18: return Ext;
        case 29: return Runtime;
        case 20: return Dummy;
        case 21: return NonReciprocal;
        case 22: return ImplicitDative;
        case 23: return ImplicitPlural;
        case 24: return ImplicitP1sg;
        case 25: return ImplicitP2sg;
        case 26: return FamilyMember;
        case 27: return PronunciationGuessed;
        case 28: return Informal;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RootAttribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RootAttribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RootAttribute>() {
            public RootAttribute findValueByNumber(int number) {
              return RootAttribute.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final RootAttribute[] VALUES = values();

    public static RootAttribute valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RootAttribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RootAttribute)
  }

  public interface DictionaryItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DictionaryItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string lemma = 1;</code>
     */
    java.lang.String getLemma();
    /**
     * <code>string lemma = 1;</code>
     */
    com.google.protobuf.ByteString
        getLemmaBytes();

    /**
     * <code>string root = 2;</code>
     */
    java.lang.String getRoot();
    /**
     * <code>string root = 2;</code>
     */
    com.google.protobuf.ByteString
        getRootBytes();

    /**
     * <code>string pronunciation = 3;</code>
     */
    java.lang.String getPronunciation();
    /**
     * <code>string pronunciation = 3;</code>
     */
    com.google.protobuf.ByteString
        getPronunciationBytes();

    /**
     * <code>string reference = 4;</code>
     */
    java.lang.String getReference();
    /**
     * <code>string reference = 4;</code>
     */
    com.google.protobuf.ByteString
        getReferenceBytes();

    /**
     * <code>.PrimaryPos primary_pos = 5;</code>
     */
    int getPrimaryPosValue();
    /**
     * <code>.PrimaryPos primary_pos = 5;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos getPrimaryPos();

    /**
     * <code>.SecondaryPos secondary_pos = 6;</code>
     */
    int getSecondaryPosValue();
    /**
     * <code>.SecondaryPos secondary_pos = 6;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos getSecondaryPos();

    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute> getRootAttributesList();
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    int getRootAttributesCount();
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute getRootAttributes(int index);
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    java.util.List<java.lang.Integer>
    getRootAttributesValueList();
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    int getRootAttributesValue(int index);

    /**
     * <code>int32 index = 8;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code DictionaryItem}
   */
  public  static final class DictionaryItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DictionaryItem)
      DictionaryItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DictionaryItem.newBuilder() to construct.
    private DictionaryItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DictionaryItem() {
      lemma_ = "";
      root_ = "";
      pronunciation_ = "";
      reference_ = "";
      primaryPos_ = 0;
      secondaryPos_ = 0;
      rootAttributes_ = java.util.Collections.emptyList();
      index_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DictionaryItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              lemma_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              root_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              pronunciation_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              reference_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              primaryPos_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              secondaryPos_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                rootAttributes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              rootAttributes_.add(rawValue);
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  rootAttributes_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000040;
                }
                rootAttributes_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 64: {

              index_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          rootAttributes_ = java.util.Collections.unmodifiableList(rootAttributes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_DictionaryItem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_DictionaryItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.class, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder.class);
    }

    private int bitField0_;
    public static final int LEMMA_FIELD_NUMBER = 1;
    private volatile java.lang.Object lemma_;
    /**
     * <code>string lemma = 1;</code>
     */
    public java.lang.String getLemma() {
      java.lang.Object ref = lemma_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lemma_ = s;
        return s;
      }
    }
    /**
     * <code>string lemma = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLemmaBytes() {
      java.lang.Object ref = lemma_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lemma_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOT_FIELD_NUMBER = 2;
    private volatile java.lang.Object root_;
    /**
     * <code>string root = 2;</code>
     */
    public java.lang.String getRoot() {
      java.lang.Object ref = root_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        root_ = s;
        return s;
      }
    }
    /**
     * <code>string root = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRootBytes() {
      java.lang.Object ref = root_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        root_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRONUNCIATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object pronunciation_;
    /**
     * <code>string pronunciation = 3;</code>
     */
    public java.lang.String getPronunciation() {
      java.lang.Object ref = pronunciation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pronunciation_ = s;
        return s;
      }
    }
    /**
     * <code>string pronunciation = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPronunciationBytes() {
      java.lang.Object ref = pronunciation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pronunciation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCE_FIELD_NUMBER = 4;
    private volatile java.lang.Object reference_;
    /**
     * <code>string reference = 4;</code>
     */
    public java.lang.String getReference() {
      java.lang.Object ref = reference_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reference_ = s;
        return s;
      }
    }
    /**
     * <code>string reference = 4;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceBytes() {
      java.lang.Object ref = reference_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reference_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIMARY_POS_FIELD_NUMBER = 5;
    private int primaryPos_;
    /**
     * <code>.PrimaryPos primary_pos = 5;</code>
     */
    public int getPrimaryPosValue() {
      return primaryPos_;
    }
    /**
     * <code>.PrimaryPos primary_pos = 5;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos getPrimaryPos() {
      @SuppressWarnings("deprecation")
      zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos result = zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.valueOf(primaryPos_);
      return result == null ? zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.UNRECOGNIZED : result;
    }

    public static final int SECONDARY_POS_FIELD_NUMBER = 6;
    private int secondaryPos_;
    /**
     * <code>.SecondaryPos secondary_pos = 6;</code>
     */
    public int getSecondaryPosValue() {
      return secondaryPos_;
    }
    /**
     * <code>.SecondaryPos secondary_pos = 6;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos getSecondaryPos() {
      @SuppressWarnings("deprecation")
      zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos result = zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.valueOf(secondaryPos_);
      return result == null ? zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.UNRECOGNIZED : result;
    }

    public static final int ROOT_ATTRIBUTES_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> rootAttributes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute> rootAttributes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute>() {
              public zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute result = zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute.valueOf(from);
                return result == null ? zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute> getRootAttributesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute>(rootAttributes_, rootAttributes_converter_);
    }
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    public int getRootAttributesCount() {
      return rootAttributes_.size();
    }
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute getRootAttributes(int index) {
      return rootAttributes_converter_.convert(rootAttributes_.get(index));
    }
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    public java.util.List<java.lang.Integer>
    getRootAttributesValueList() {
      return rootAttributes_;
    }
    /**
     * <code>repeated .RootAttribute root_attributes = 7;</code>
     */
    public int getRootAttributesValue(int index) {
      return rootAttributes_.get(index);
    }
    private int rootAttributesMemoizedSerializedSize;

    public static final int INDEX_FIELD_NUMBER = 8;
    private int index_;
    /**
     * <code>int32 index = 8;</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getLemmaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, lemma_);
      }
      if (!getRootBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, root_);
      }
      if (!getPronunciationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, pronunciation_);
      }
      if (!getReferenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, reference_);
      }
      if (primaryPos_ != zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.PrimaryPos_Unknown.getNumber()) {
        output.writeEnum(5, primaryPos_);
      }
      if (secondaryPos_ != zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.SecondaryPos_Unknown.getNumber()) {
        output.writeEnum(6, secondaryPos_);
      }
      if (getRootAttributesList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(rootAttributesMemoizedSerializedSize);
      }
      for (int i = 0; i < rootAttributes_.size(); i++) {
        output.writeEnumNoTag(rootAttributes_.get(i));
      }
      if (index_ != 0) {
        output.writeInt32(8, index_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLemmaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, lemma_);
      }
      if (!getRootBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, root_);
      }
      if (!getPronunciationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, pronunciation_);
      }
      if (!getReferenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, reference_);
      }
      if (primaryPos_ != zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.PrimaryPos_Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, primaryPos_);
      }
      if (secondaryPos_ != zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.SecondaryPos_Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, secondaryPos_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rootAttributes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(rootAttributes_.get(i));
        }
        size += dataSize;
        if (!getRootAttributesList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }rootAttributesMemoizedSerializedSize = dataSize;
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem)) {
        return super.equals(obj);
      }
      zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem other = (zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem) obj;

      boolean result = true;
      result = result && getLemma()
          .equals(other.getLemma());
      result = result && getRoot()
          .equals(other.getRoot());
      result = result && getPronunciation()
          .equals(other.getPronunciation());
      result = result && getReference()
          .equals(other.getReference());
      result = result && primaryPos_ == other.primaryPos_;
      result = result && secondaryPos_ == other.secondaryPos_;
      result = result && rootAttributes_.equals(other.rootAttributes_);
      result = result && (getIndex()
          == other.getIndex());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEMMA_FIELD_NUMBER;
      hash = (53 * hash) + getLemma().hashCode();
      hash = (37 * hash) + ROOT_FIELD_NUMBER;
      hash = (53 * hash) + getRoot().hashCode();
      hash = (37 * hash) + PRONUNCIATION_FIELD_NUMBER;
      hash = (53 * hash) + getPronunciation().hashCode();
      hash = (37 * hash) + REFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getReference().hashCode();
      hash = (37 * hash) + PRIMARY_POS_FIELD_NUMBER;
      hash = (53 * hash) + primaryPos_;
      hash = (37 * hash) + SECONDARY_POS_FIELD_NUMBER;
      hash = (53 * hash) + secondaryPos_;
      if (getRootAttributesCount() > 0) {
        hash = (37 * hash) + ROOT_ATTRIBUTES_FIELD_NUMBER;
        hash = (53 * hash) + rootAttributes_.hashCode();
      }
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DictionaryItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DictionaryItem)
        zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_DictionaryItem_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_DictionaryItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.class, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder.class);
      }

      // Construct using zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        lemma_ = "";

        root_ = "";

        pronunciation_ = "";

        reference_ = "";

        primaryPos_ = 0;

        secondaryPos_ = 0;

        rootAttributes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        index_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_DictionaryItem_descriptor;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getDefaultInstanceForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.getDefaultInstance();
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem build() {
        zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem buildPartial() {
        zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem result = new zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.lemma_ = lemma_;
        result.root_ = root_;
        result.pronunciation_ = pronunciation_;
        result.reference_ = reference_;
        result.primaryPos_ = primaryPos_;
        result.secondaryPos_ = secondaryPos_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          rootAttributes_ = java.util.Collections.unmodifiableList(rootAttributes_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.rootAttributes_ = rootAttributes_;
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem) {
          return mergeFrom((zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem other) {
        if (other == zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.getDefaultInstance()) return this;
        if (!other.getLemma().isEmpty()) {
          lemma_ = other.lemma_;
          onChanged();
        }
        if (!other.getRoot().isEmpty()) {
          root_ = other.root_;
          onChanged();
        }
        if (!other.getPronunciation().isEmpty()) {
          pronunciation_ = other.pronunciation_;
          onChanged();
        }
        if (!other.getReference().isEmpty()) {
          reference_ = other.reference_;
          onChanged();
        }
        if (other.primaryPos_ != 0) {
          setPrimaryPosValue(other.getPrimaryPosValue());
        }
        if (other.secondaryPos_ != 0) {
          setSecondaryPosValue(other.getSecondaryPosValue());
        }
        if (!other.rootAttributes_.isEmpty()) {
          if (rootAttributes_.isEmpty()) {
            rootAttributes_ = other.rootAttributes_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRootAttributesIsMutable();
            rootAttributes_.addAll(other.rootAttributes_);
          }
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object lemma_ = "";
      /**
       * <code>string lemma = 1;</code>
       */
      public java.lang.String getLemma() {
        java.lang.Object ref = lemma_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lemma_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string lemma = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLemmaBytes() {
        java.lang.Object ref = lemma_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lemma_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lemma = 1;</code>
       */
      public Builder setLemma(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lemma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string lemma = 1;</code>
       */
      public Builder clearLemma() {
        
        lemma_ = getDefaultInstance().getLemma();
        onChanged();
        return this;
      }
      /**
       * <code>string lemma = 1;</code>
       */
      public Builder setLemmaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lemma_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object root_ = "";
      /**
       * <code>string root = 2;</code>
       */
      public java.lang.String getRoot() {
        java.lang.Object ref = root_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          root_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string root = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRootBytes() {
        java.lang.Object ref = root_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          root_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string root = 2;</code>
       */
      public Builder setRoot(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        root_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string root = 2;</code>
       */
      public Builder clearRoot() {
        
        root_ = getDefaultInstance().getRoot();
        onChanged();
        return this;
      }
      /**
       * <code>string root = 2;</code>
       */
      public Builder setRootBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        root_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pronunciation_ = "";
      /**
       * <code>string pronunciation = 3;</code>
       */
      public java.lang.String getPronunciation() {
        java.lang.Object ref = pronunciation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pronunciation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string pronunciation = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPronunciationBytes() {
        java.lang.Object ref = pronunciation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pronunciation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string pronunciation = 3;</code>
       */
      public Builder setPronunciation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pronunciation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string pronunciation = 3;</code>
       */
      public Builder clearPronunciation() {
        
        pronunciation_ = getDefaultInstance().getPronunciation();
        onChanged();
        return this;
      }
      /**
       * <code>string pronunciation = 3;</code>
       */
      public Builder setPronunciationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pronunciation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object reference_ = "";
      /**
       * <code>string reference = 4;</code>
       */
      public java.lang.String getReference() {
        java.lang.Object ref = reference_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reference_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string reference = 4;</code>
       */
      public com.google.protobuf.ByteString
          getReferenceBytes() {
        java.lang.Object ref = reference_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reference_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reference = 4;</code>
       */
      public Builder setReference(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reference = 4;</code>
       */
      public Builder clearReference() {
        
        reference_ = getDefaultInstance().getReference();
        onChanged();
        return this;
      }
      /**
       * <code>string reference = 4;</code>
       */
      public Builder setReferenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reference_ = value;
        onChanged();
        return this;
      }

      private int primaryPos_ = 0;
      /**
       * <code>.PrimaryPos primary_pos = 5;</code>
       */
      public int getPrimaryPosValue() {
        return primaryPos_;
      }
      /**
       * <code>.PrimaryPos primary_pos = 5;</code>
       */
      public Builder setPrimaryPosValue(int value) {
        primaryPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.PrimaryPos primary_pos = 5;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos getPrimaryPos() {
        @SuppressWarnings("deprecation")
        zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos result = zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.valueOf(primaryPos_);
        return result == null ? zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos.UNRECOGNIZED : result;
      }
      /**
       * <code>.PrimaryPos primary_pos = 5;</code>
       */
      public Builder setPrimaryPos(zemberek.morphology.lexicon.proto.LexiconProto.PrimaryPos value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        primaryPos_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PrimaryPos primary_pos = 5;</code>
       */
      public Builder clearPrimaryPos() {
        
        primaryPos_ = 0;
        onChanged();
        return this;
      }

      private int secondaryPos_ = 0;
      /**
       * <code>.SecondaryPos secondary_pos = 6;</code>
       */
      public int getSecondaryPosValue() {
        return secondaryPos_;
      }
      /**
       * <code>.SecondaryPos secondary_pos = 6;</code>
       */
      public Builder setSecondaryPosValue(int value) {
        secondaryPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SecondaryPos secondary_pos = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos getSecondaryPos() {
        @SuppressWarnings("deprecation")
        zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos result = zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.valueOf(secondaryPos_);
        return result == null ? zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos.UNRECOGNIZED : result;
      }
      /**
       * <code>.SecondaryPos secondary_pos = 6;</code>
       */
      public Builder setSecondaryPos(zemberek.morphology.lexicon.proto.LexiconProto.SecondaryPos value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        secondaryPos_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SecondaryPos secondary_pos = 6;</code>
       */
      public Builder clearSecondaryPos() {
        
        secondaryPos_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> rootAttributes_ =
        java.util.Collections.emptyList();
      private void ensureRootAttributesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          rootAttributes_ = new java.util.ArrayList<java.lang.Integer>(rootAttributes_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute> getRootAttributesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute>(rootAttributes_, rootAttributes_converter_);
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public int getRootAttributesCount() {
        return rootAttributes_.size();
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute getRootAttributes(int index) {
        return rootAttributes_converter_.convert(rootAttributes_.get(index));
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder setRootAttributes(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRootAttributesIsMutable();
        rootAttributes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder addRootAttributes(zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRootAttributesIsMutable();
        rootAttributes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder addAllRootAttributes(
          java.lang.Iterable<? extends zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute> values) {
        ensureRootAttributesIsMutable();
        for (zemberek.morphology.lexicon.proto.LexiconProto.RootAttribute value : values) {
          rootAttributes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder clearRootAttributes() {
        rootAttributes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public java.util.List<java.lang.Integer>
      getRootAttributesValueList() {
        return java.util.Collections.unmodifiableList(rootAttributes_);
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public int getRootAttributesValue(int index) {
        return rootAttributes_.get(index);
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder setRootAttributesValue(
          int index, int value) {
        ensureRootAttributesIsMutable();
        rootAttributes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder addRootAttributesValue(int value) {
        ensureRootAttributesIsMutable();
        rootAttributes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .RootAttribute root_attributes = 7;</code>
       */
      public Builder addAllRootAttributesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureRootAttributesIsMutable();
        for (int value : values) {
          rootAttributes_.add(value);
        }
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>int32 index = 8;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>int32 index = 8;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 index = 8;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DictionaryItem)
    }

    // @@protoc_insertion_point(class_scope:DictionaryItem)
    private static final zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem();
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DictionaryItem>
        PARSER = new com.google.protobuf.AbstractParser<DictionaryItem>() {
      @java.lang.Override
      public DictionaryItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DictionaryItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DictionaryItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DictionaryItem> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DictionaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Dictionary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 generation_timestamp = 1;</code>
     */
    long getGenerationTimestamp();

    /**
     * <pre>
     * Human readable.
     * </pre>
     *
     * <code>string generation_time = 2;</code>
     */
    java.lang.String getGenerationTime();
    /**
     * <pre>
     * Human readable.
     * </pre>
     *
     * <code>string generation_time = 2;</code>
     */
    com.google.protobuf.ByteString
        getGenerationTimeBytes();

    /**
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    java.util.List<java.lang.String>
        getSourcesList();
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    int getSourcesCount();
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    java.lang.String getSources(int index);
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    com.google.protobuf.ByteString
        getSourcesBytes(int index);

    /**
     * <pre>
     * For debugging etc.
     * </pre>
     *
     * <code>bool ignore = 5;</code>
     */
    boolean getIgnore();

    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> 
        getItemsList();
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getItems(int index);
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Dictionary}
   */
  public  static final class Dictionary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Dictionary)
      DictionaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Dictionary.newBuilder() to construct.
    private Dictionary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dictionary() {
      generationTimestamp_ = 0L;
      generationTime_ = "";
      name_ = "";
      sources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      ignore_ = false;
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Dictionary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              generationTimestamp_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              generationTime_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sources_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              sources_.add(s);
              break;
            }
            case 40: {

              ignore_ = input.readBool();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                items_ = new java.util.ArrayList<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem>();
                mutable_bitField0_ |= 0x00000020;
              }
              items_.add(
                  input.readMessage(zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sources_ = sources_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_Dictionary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_Dictionary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.class, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder.class);
    }

    /**
     * Protobuf enum {@code Dictionary.Creator}
     */
    public enum Creator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>Unknown = 0;</code>
       */
      Unknown(0),
      /**
       * <code>Robot = 1;</code>
       */
      Robot(1),
      /**
       * <code>Manual = 2;</code>
       */
      Manual(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>Unknown = 0;</code>
       */
      public static final int Unknown_VALUE = 0;
      /**
       * <code>Robot = 1;</code>
       */
      public static final int Robot_VALUE = 1;
      /**
       * <code>Manual = 2;</code>
       */
      public static final int Manual_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Creator valueOf(int value) {
        return forNumber(value);
      }

      public static Creator forNumber(int value) {
        switch (value) {
          case 0: return Unknown;
          case 1: return Robot;
          case 2: return Manual;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Creator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Creator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Creator>() {
              public Creator findValueByNumber(int number) {
                return Creator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.getDescriptor().getEnumTypes().get(0);
      }

      private static final Creator[] VALUES = values();

      public static Creator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Creator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Dictionary.Creator)
    }

    private int bitField0_;
    public static final int GENERATION_TIMESTAMP_FIELD_NUMBER = 1;
    private long generationTimestamp_;
    /**
     * <code>int64 generation_timestamp = 1;</code>
     */
    public long getGenerationTimestamp() {
      return generationTimestamp_;
    }

    public static final int GENERATION_TIME_FIELD_NUMBER = 2;
    private volatile java.lang.Object generationTime_;
    /**
     * <pre>
     * Human readable.
     * </pre>
     *
     * <code>string generation_time = 2;</code>
     */
    public java.lang.String getGenerationTime() {
      java.lang.Object ref = generationTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        generationTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Human readable.
     * </pre>
     *
     * <code>string generation_time = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGenerationTimeBytes() {
      java.lang.Object ref = generationTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        generationTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCES_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList sources_;
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSourcesList() {
      return sources_;
    }
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    public int getSourcesCount() {
      return sources_.size();
    }
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    public java.lang.String getSources(int index) {
      return sources_.get(index);
    }
    /**
     * <pre>
     * Original sources;
     * </pre>
     *
     * <code>repeated string sources = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSourcesBytes(int index) {
      return sources_.getByteString(index);
    }

    public static final int IGNORE_FIELD_NUMBER = 5;
    private boolean ignore_;
    /**
     * <pre>
     * For debugging etc.
     * </pre>
     *
     * <code>bool ignore = 5;</code>
     */
    public boolean getIgnore() {
      return ignore_;
    }

    public static final int ITEMS_FIELD_NUMBER = 6;
    private java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> items_;
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    public java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .DictionaryItem items = 6;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (generationTimestamp_ != 0L) {
        output.writeInt64(1, generationTimestamp_);
      }
      if (!getGenerationTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, generationTime_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      for (int i = 0; i < sources_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, sources_.getRaw(i));
      }
      if (ignore_ != false) {
        output.writeBool(5, ignore_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(6, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (generationTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, generationTimestamp_);
      }
      if (!getGenerationTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, generationTime_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sources_.size(); i++) {
          dataSize += computeStringSizeNoTag(sources_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSourcesList().size();
      }
      if (ignore_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, ignore_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zemberek.morphology.lexicon.proto.LexiconProto.Dictionary)) {
        return super.equals(obj);
      }
      zemberek.morphology.lexicon.proto.LexiconProto.Dictionary other = (zemberek.morphology.lexicon.proto.LexiconProto.Dictionary) obj;

      boolean result = true;
      result = result && (getGenerationTimestamp()
          == other.getGenerationTimestamp());
      result = result && getGenerationTime()
          .equals(other.getGenerationTime());
      result = result && getName()
          .equals(other.getName());
      result = result && getSourcesList()
          .equals(other.getSourcesList());
      result = result && (getIgnore()
          == other.getIgnore());
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GENERATION_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGenerationTimestamp());
      hash = (37 * hash) + GENERATION_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getGenerationTime().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getSourcesCount() > 0) {
        hash = (37 * hash) + SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getSourcesList().hashCode();
      }
      hash = (37 * hash) + IGNORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIgnore());
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zemberek.morphology.lexicon.proto.LexiconProto.Dictionary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Dictionary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Dictionary)
        zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_Dictionary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_Dictionary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.class, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder.class);
      }

      // Construct using zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        generationTimestamp_ = 0L;

        generationTime_ = "";

        name_ = "";

        sources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        ignore_ = false;

        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_Dictionary_descriptor;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDefaultInstanceForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.getDefaultInstance();
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary build() {
        zemberek.morphology.lexicon.proto.LexiconProto.Dictionary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary buildPartial() {
        zemberek.morphology.lexicon.proto.LexiconProto.Dictionary result = new zemberek.morphology.lexicon.proto.LexiconProto.Dictionary(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.generationTimestamp_ = generationTimestamp_;
        result.generationTime_ = generationTime_;
        result.name_ = name_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          sources_ = sources_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.sources_ = sources_;
        result.ignore_ = ignore_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zemberek.morphology.lexicon.proto.LexiconProto.Dictionary) {
          return mergeFrom((zemberek.morphology.lexicon.proto.LexiconProto.Dictionary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zemberek.morphology.lexicon.proto.LexiconProto.Dictionary other) {
        if (other == zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.getDefaultInstance()) return this;
        if (other.getGenerationTimestamp() != 0L) {
          setGenerationTimestamp(other.getGenerationTimestamp());
        }
        if (!other.getGenerationTime().isEmpty()) {
          generationTime_ = other.generationTime_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.sources_.isEmpty()) {
          if (sources_.isEmpty()) {
            sources_ = other.sources_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSourcesIsMutable();
            sources_.addAll(other.sources_);
          }
          onChanged();
        }
        if (other.getIgnore() != false) {
          setIgnore(other.getIgnore());
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000020);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zemberek.morphology.lexicon.proto.LexiconProto.Dictionary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zemberek.morphology.lexicon.proto.LexiconProto.Dictionary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long generationTimestamp_ ;
      /**
       * <code>int64 generation_timestamp = 1;</code>
       */
      public long getGenerationTimestamp() {
        return generationTimestamp_;
      }
      /**
       * <code>int64 generation_timestamp = 1;</code>
       */
      public Builder setGenerationTimestamp(long value) {
        
        generationTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 generation_timestamp = 1;</code>
       */
      public Builder clearGenerationTimestamp() {
        
        generationTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object generationTime_ = "";
      /**
       * <pre>
       * Human readable.
       * </pre>
       *
       * <code>string generation_time = 2;</code>
       */
      public java.lang.String getGenerationTime() {
        java.lang.Object ref = generationTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          generationTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Human readable.
       * </pre>
       *
       * <code>string generation_time = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGenerationTimeBytes() {
        java.lang.Object ref = generationTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          generationTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Human readable.
       * </pre>
       *
       * <code>string generation_time = 2;</code>
       */
      public Builder setGenerationTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        generationTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable.
       * </pre>
       *
       * <code>string generation_time = 2;</code>
       */
      public Builder clearGenerationTime() {
        
        generationTime_ = getDefaultInstance().getGenerationTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable.
       * </pre>
       *
       * <code>string generation_time = 2;</code>
       */
      public Builder setGenerationTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        generationTime_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList sources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSourcesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sources_ = new com.google.protobuf.LazyStringArrayList(sources_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSourcesList() {
        return sources_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public int getSourcesCount() {
        return sources_.size();
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public java.lang.String getSources(int index) {
        return sources_.get(index);
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSourcesBytes(int index) {
        return sources_.getByteString(index);
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public Builder setSources(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourcesIsMutable();
        sources_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public Builder addSources(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSourcesIsMutable();
        sources_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public Builder addAllSources(
          java.lang.Iterable<java.lang.String> values) {
        ensureSourcesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sources_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public Builder clearSources() {
        sources_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Original sources;
       * </pre>
       *
       * <code>repeated string sources = 4;</code>
       */
      public Builder addSourcesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSourcesIsMutable();
        sources_.add(value);
        onChanged();
        return this;
      }

      private boolean ignore_ ;
      /**
       * <pre>
       * For debugging etc.
       * </pre>
       *
       * <code>bool ignore = 5;</code>
       */
      public boolean getIgnore() {
        return ignore_;
      }
      /**
       * <pre>
       * For debugging etc.
       * </pre>
       *
       * <code>bool ignore = 5;</code>
       */
      public Builder setIgnore(boolean value) {
        
        ignore_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For debugging etc.
       * </pre>
       *
       * <code>bool ignore = 5;</code>
       */
      public Builder clearIgnore() {
        
        ignore_ = false;
        onChanged();
        return this;
      }

      private java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          items_ = new java.util.ArrayList<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem>(items_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder setItems(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder setItems(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder addItems(zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder addItems(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder addItems(
          zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder addItems(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.getDefaultInstance());
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.getDefaultInstance());
      }
      /**
       * <code>repeated .DictionaryItem items = 6;</code>
       */
      public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItem.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Dictionary)
    }

    // @@protoc_insertion_point(class_scope:Dictionary)
    private static final zemberek.morphology.lexicon.proto.LexiconProto.Dictionary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zemberek.morphology.lexicon.proto.LexiconProto.Dictionary();
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dictionary>
        PARSER = new com.google.protobuf.AbstractParser<Dictionary>() {
      @java.lang.Override
      public Dictionary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Dictionary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dictionary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dictionary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MasterDictionaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MasterDictionary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> 
        getDictionariesList();
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDictionaries(int index);
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    int getDictionariesCount();
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder> 
        getDictionariesOrBuilderList();
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder getDictionariesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Maybe not needed.
   * </pre>
   *
   * Protobuf type {@code MasterDictionary}
   */
  public  static final class MasterDictionary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MasterDictionary)
      MasterDictionaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MasterDictionary.newBuilder() to construct.
    private MasterDictionary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MasterDictionary() {
      dictionaries_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MasterDictionary(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dictionaries_ = new java.util.ArrayList<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary>();
                mutable_bitField0_ |= 0x00000001;
              }
              dictionaries_.add(
                  input.readMessage(zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dictionaries_ = java.util.Collections.unmodifiableList(dictionaries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_MasterDictionary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_MasterDictionary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.class, zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.Builder.class);
    }

    public static final int DICTIONARIES_FIELD_NUMBER = 1;
    private java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> dictionaries_;
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> getDictionariesList() {
      return dictionaries_;
    }
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    public java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder> 
        getDictionariesOrBuilderList() {
      return dictionaries_;
    }
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    public int getDictionariesCount() {
      return dictionaries_.size();
    }
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDictionaries(int index) {
      return dictionaries_.get(index);
    }
    /**
     * <code>repeated .Dictionary dictionaries = 1;</code>
     */
    public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder getDictionariesOrBuilder(
        int index) {
      return dictionaries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dictionaries_.size(); i++) {
        output.writeMessage(1, dictionaries_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dictionaries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dictionaries_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary)) {
        return super.equals(obj);
      }
      zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary other = (zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary) obj;

      boolean result = true;
      result = result && getDictionariesList()
          .equals(other.getDictionariesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDictionariesCount() > 0) {
        hash = (37 * hash) + DICTIONARIES_FIELD_NUMBER;
        hash = (53 * hash) + getDictionariesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Maybe not needed.
     * </pre>
     *
     * Protobuf type {@code MasterDictionary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MasterDictionary)
        zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_MasterDictionary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_MasterDictionary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.class, zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.Builder.class);
      }

      // Construct using zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDictionariesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (dictionariesBuilder_ == null) {
          dictionaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dictionariesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.internal_static_MasterDictionary_descriptor;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary getDefaultInstanceForType() {
        return zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.getDefaultInstance();
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary build() {
        zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary buildPartial() {
        zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary result = new zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary(this);
        int from_bitField0_ = bitField0_;
        if (dictionariesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dictionaries_ = java.util.Collections.unmodifiableList(dictionaries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dictionaries_ = dictionaries_;
        } else {
          result.dictionaries_ = dictionariesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary) {
          return mergeFrom((zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary other) {
        if (other == zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary.getDefaultInstance()) return this;
        if (dictionariesBuilder_ == null) {
          if (!other.dictionaries_.isEmpty()) {
            if (dictionaries_.isEmpty()) {
              dictionaries_ = other.dictionaries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDictionariesIsMutable();
              dictionaries_.addAll(other.dictionaries_);
            }
            onChanged();
          }
        } else {
          if (!other.dictionaries_.isEmpty()) {
            if (dictionariesBuilder_.isEmpty()) {
              dictionariesBuilder_.dispose();
              dictionariesBuilder_ = null;
              dictionaries_ = other.dictionaries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dictionariesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDictionariesFieldBuilder() : null;
            } else {
              dictionariesBuilder_.addAllMessages(other.dictionaries_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> dictionaries_ =
        java.util.Collections.emptyList();
      private void ensureDictionariesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dictionaries_ = new java.util.ArrayList<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary>(dictionaries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          zemberek.morphology.lexicon.proto.LexiconProto.Dictionary, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder> dictionariesBuilder_;

      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> getDictionariesList() {
        if (dictionariesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dictionaries_);
        } else {
          return dictionariesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public int getDictionariesCount() {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.size();
        } else {
          return dictionariesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary getDictionaries(int index) {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.get(index);
        } else {
          return dictionariesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder setDictionaries(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.set(index, value);
          onChanged();
        } else {
          dictionariesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder setDictionaries(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.set(index, builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder addDictionaries(zemberek.morphology.lexicon.proto.LexiconProto.Dictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.add(value);
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder addDictionaries(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.add(index, value);
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder addDictionaries(
          zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.add(builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder addDictionaries(
          int index, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.add(index, builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder addAllDictionaries(
          java.lang.Iterable<? extends zemberek.morphology.lexicon.proto.LexiconProto.Dictionary> values) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dictionaries_);
          onChanged();
        } else {
          dictionariesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder clearDictionaries() {
        if (dictionariesBuilder_ == null) {
          dictionaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dictionariesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public Builder removeDictionaries(int index) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.remove(index);
          onChanged();
        } else {
          dictionariesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder getDictionariesBuilder(
          int index) {
        return getDictionariesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder getDictionariesOrBuilder(
          int index) {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.get(index);  } else {
          return dictionariesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public java.util.List<? extends zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder> 
           getDictionariesOrBuilderList() {
        if (dictionariesBuilder_ != null) {
          return dictionariesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dictionaries_);
        }
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder addDictionariesBuilder() {
        return getDictionariesFieldBuilder().addBuilder(
            zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.getDefaultInstance());
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder addDictionariesBuilder(
          int index) {
        return getDictionariesFieldBuilder().addBuilder(
            index, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.getDefaultInstance());
      }
      /**
       * <code>repeated .Dictionary dictionaries = 1;</code>
       */
      public java.util.List<zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder> 
           getDictionariesBuilderList() {
        return getDictionariesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          zemberek.morphology.lexicon.proto.LexiconProto.Dictionary, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder> 
          getDictionariesFieldBuilder() {
        if (dictionariesBuilder_ == null) {
          dictionariesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              zemberek.morphology.lexicon.proto.LexiconProto.Dictionary, zemberek.morphology.lexicon.proto.LexiconProto.Dictionary.Builder, zemberek.morphology.lexicon.proto.LexiconProto.DictionaryOrBuilder>(
                  dictionaries_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dictionaries_ = null;
        }
        return dictionariesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MasterDictionary)
    }

    // @@protoc_insertion_point(class_scope:MasterDictionary)
    private static final zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary();
    }

    public static zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MasterDictionary>
        PARSER = new com.google.protobuf.AbstractParser<MasterDictionary>() {
      @java.lang.Override
      public MasterDictionary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MasterDictionary(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MasterDictionary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MasterDictionary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public zemberek.morphology.lexicon.proto.LexiconProto.MasterDictionary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DictionaryItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DictionaryItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Dictionary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Dictionary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MasterDictionary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MasterDictionary_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rlexicon.proto\"\327\001\n\016DictionaryItem\022\r\n\005le" +
      "mma\030\001 \001(\t\022\014\n\004root\030\002 \001(\t\022\025\n\rpronunciation" +
      "\030\003 \001(\t\022\021\n\treference\030\004 \001(\t\022 \n\013primary_pos" +
      "\030\005 \001(\0162\013.PrimaryPos\022$\n\rsecondary_pos\030\006 \001" +
      "(\0162\r.SecondaryPos\022\'\n\017root_attributes\030\007 \003" +
      "(\0162\016.RootAttribute\022\r\n\005index\030\010 \001(\005\"\301\001\n\nDi" +
      "ctionary\022\034\n\024generation_timestamp\030\001 \001(\003\022\027" +
      "\n\017generation_time\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\017\n" +
      "\007sources\030\004 \003(\t\022\016\n\006ignore\030\005 \001(\010\022\036\n\005items\030" +
      "\006 \003(\0132\017.DictionaryItem\"-\n\007Creator\022\013\n\007Unk" +
      "nown\020\000\022\t\n\005Robot\020\001\022\n\n\006Manual\020\002\"5\n\020MasterD" +
      "ictionary\022!\n\014dictionaries\030\001 \003(\0132\013.Dictio" +
      "nary*\341\001\n\nPrimaryPos\022\026\n\022PrimaryPos_Unknow" +
      "n\020\000\022\010\n\004Noun\020\001\022\r\n\tAdjective\020\002\022\n\n\006Adverb\020\003" +
      "\022\017\n\013Conjunction\020\004\022\020\n\014Interjection\020\005\022\010\n\004V" +
      "erb\020\006\022\013\n\007Pronoun\020\007\022\013\n\007Numeral\020\010\022\016\n\nDeter" +
      "miner\020\t\022\020\n\014PostPositive\020\n\022\014\n\010Question\020\013\022" +
      "\016\n\nDuplicator\020\014\022\017\n\013Punctuation\020\r*\333\003\n\014Sec" +
      "ondaryPos\022\030\n\024SecondaryPos_Unknown\020\000\022\025\n\021D" +
      "emonstrativePron\020\001\022\010\n\004Time\020\002\022\022\n\016Quantiti" +
      "vePron\020\003\022\020\n\014QuestionPron\020\004\022\016\n\nProperNoun" +
      "\020\005\022\020\n\014PersonalPron\020\006\022\021\n\rReflexivePron\020\007\022" +
      "\010\n\004None\020\010\022\013\n\007Ordinal\020\t\022\014\n\010Cardinal\020\n\022\016\n\n" +
      "Percentage\020\013\022\t\n\005Ratio\020\014\022\t\n\005Range\020\r\022\010\n\004Re" +
      "al\020\016\022\020\n\014Distribution\020\017\022\t\n\005Clock\020\020\022\010\n\004Dat" +
      "e\020\021\022\027\n\023RegularAbbreviation\020\022\022\020\n\014Abbrevia" +
      "tion\020\023\022\t\n\005Email\020\024\022\007\n\003Url\020\025\022\013\n\007Mention\020\026\022" +
      "\013\n\007HashTag\020\027\022\014\n\010Emoticon\020\030\022\020\n\014RomanNumer" +
      "al\020\031\022\t\n\005PCDat\0202\022\t\n\005PCAcc\0203\022\t\n\005PCIns\0204\022\t\n" +
      "\005PCNom\0205\022\t\n\005PCGen\0206\022\t\n\005PCAbl\0207*\204\004\n\rRootA" +
      "ttribute\022\031\n\025RootAttribute_Unknown\020\000\022\014\n\010A" +
      "orist_I\020\001\022\014\n\010Aorist_A\020\002\022\030\n\024ProgressiveVo" +
      "welDrop\020\003\022\016\n\nPassive_In\020\004\022\017\n\013Causative_t" +
      "\020\005\022\013\n\007Voicing\020\006\022\r\n\tNoVoicing\020\007\022\022\n\016Invers" +
      "eHarmony\020\010\022\014\n\010Doubling\020\t\022\021\n\rLastVowelDro" +
      "p\020\n\022\020\n\014CompoundP3sg\020\013\022\014\n\010NoSuffix\020\014\022\024\n\020N" +
      "ounConsInsert_n\020\r\022\013\n\007NoQuote\020\016\022\024\n\020Compou" +
      "ndP3sgRoot\020\017\022\r\n\tReflexive\020\020\022\016\n\nReciproca" +
      "l\020\021\022\007\n\003Ext\020\022\022\013\n\007Runtime\020\035\022\t\n\005Dummy\020\024\022\021\n\r" +
      "NonReciprocal\020\025\022\022\n\016ImplicitDative\020\026\022\022\n\016I" +
      "mplicitPlural\020\027\022\020\n\014ImplicitP1sg\020\030\022\020\n\014Imp" +
      "licitP2sg\020\031\022\020\n\014FamilyMember\020\032\022\030\n\024Pronunc" +
      "iationGuessed\020\033\022\014\n\010Informal\020\034B1\n!zembere" +
      "k.morphology.lexicon.protoB\014LexiconProto" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_DictionaryItem_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DictionaryItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DictionaryItem_descriptor,
        new java.lang.String[] { "Lemma", "Root", "Pronunciation", "Reference", "PrimaryPos", "SecondaryPos", "RootAttributes", "Index", });
    internal_static_Dictionary_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Dictionary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Dictionary_descriptor,
        new java.lang.String[] { "GenerationTimestamp", "GenerationTime", "Name", "Sources", "Ignore", "Items", });
    internal_static_MasterDictionary_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_MasterDictionary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MasterDictionary_descriptor,
        new java.lang.String[] { "Dictionaries", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
