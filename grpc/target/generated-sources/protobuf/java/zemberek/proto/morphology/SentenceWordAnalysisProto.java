// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: morphology.proto

package zemberek.proto.morphology;

/**
 * <pre>
 * After disambiguation, a SentenceWordAnalysis_P object per use is used.
 * </pre>
 *
 * Protobuf type {@code zemberek.morphology.SentenceWordAnalysisProto}
 */
public  final class SentenceWordAnalysisProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zemberek.morphology.SentenceWordAnalysisProto)
    SentenceWordAnalysisProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SentenceWordAnalysisProto.newBuilder() to construct.
  private SentenceWordAnalysisProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SentenceWordAnalysisProto() {
    token_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SentenceWordAnalysisProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            token_ = s;
            break;
          }
          case 18: {
            zemberek.proto.morphology.SingleAnalysisProto.Builder subBuilder = null;
            if (best_ != null) {
              subBuilder = best_.toBuilder();
            }
            best_ = input.readMessage(zemberek.proto.morphology.SingleAnalysisProto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(best_);
              best_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            zemberek.proto.morphology.WordAnalysisProto.Builder subBuilder = null;
            if (all_ != null) {
              subBuilder = all_.toBuilder();
            }
            all_ = input.readMessage(zemberek.proto.morphology.WordAnalysisProto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(all_);
              all_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SentenceWordAnalysisProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SentenceWordAnalysisProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            zemberek.proto.morphology.SentenceWordAnalysisProto.class, zemberek.proto.morphology.SentenceWordAnalysisProto.Builder.class);
  }

  public static final int TOKEN_FIELD_NUMBER = 1;
  private volatile java.lang.Object token_;
  /**
   * <code>string token = 1;</code>
   */
  public java.lang.String getToken() {
    java.lang.Object ref = token_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      token_ = s;
      return s;
    }
  }
  /**
   * <code>string token = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTokenBytes() {
    java.lang.Object ref = token_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      token_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BEST_FIELD_NUMBER = 2;
  private zemberek.proto.morphology.SingleAnalysisProto best_;
  /**
   * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
   */
  public boolean hasBest() {
    return best_ != null;
  }
  /**
   * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
   */
  public zemberek.proto.morphology.SingleAnalysisProto getBest() {
    return best_ == null ? zemberek.proto.morphology.SingleAnalysisProto.getDefaultInstance() : best_;
  }
  /**
   * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
   */
  public zemberek.proto.morphology.SingleAnalysisProtoOrBuilder getBestOrBuilder() {
    return getBest();
  }

  public static final int ALL_FIELD_NUMBER = 3;
  private zemberek.proto.morphology.WordAnalysisProto all_;
  /**
   * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
   */
  public boolean hasAll() {
    return all_ != null;
  }
  /**
   * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
   */
  public zemberek.proto.morphology.WordAnalysisProto getAll() {
    return all_ == null ? zemberek.proto.morphology.WordAnalysisProto.getDefaultInstance() : all_;
  }
  /**
   * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
   */
  public zemberek.proto.morphology.WordAnalysisProtoOrBuilder getAllOrBuilder() {
    return getAll();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
    }
    if (best_ != null) {
      output.writeMessage(2, getBest());
    }
    if (all_ != null) {
      output.writeMessage(3, getAll());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
    }
    if (best_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getBest());
    }
    if (all_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAll());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof zemberek.proto.morphology.SentenceWordAnalysisProto)) {
      return super.equals(obj);
    }
    zemberek.proto.morphology.SentenceWordAnalysisProto other = (zemberek.proto.morphology.SentenceWordAnalysisProto) obj;

    boolean result = true;
    result = result && getToken()
        .equals(other.getToken());
    result = result && (hasBest() == other.hasBest());
    if (hasBest()) {
      result = result && getBest()
          .equals(other.getBest());
    }
    result = result && (hasAll() == other.hasAll());
    if (hasAll()) {
      result = result && getAll()
          .equals(other.getAll());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getToken().hashCode();
    if (hasBest()) {
      hash = (37 * hash) + BEST_FIELD_NUMBER;
      hash = (53 * hash) + getBest().hashCode();
    }
    if (hasAll()) {
      hash = (37 * hash) + ALL_FIELD_NUMBER;
      hash = (53 * hash) + getAll().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SentenceWordAnalysisProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(zemberek.proto.morphology.SentenceWordAnalysisProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * After disambiguation, a SentenceWordAnalysis_P object per use is used.
   * </pre>
   *
   * Protobuf type {@code zemberek.morphology.SentenceWordAnalysisProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zemberek.morphology.SentenceWordAnalysisProto)
      zemberek.proto.morphology.SentenceWordAnalysisProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SentenceWordAnalysisProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SentenceWordAnalysisProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zemberek.proto.morphology.SentenceWordAnalysisProto.class, zemberek.proto.morphology.SentenceWordAnalysisProto.Builder.class);
    }

    // Construct using zemberek.proto.morphology.SentenceWordAnalysisProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      token_ = "";

      if (bestBuilder_ == null) {
        best_ = null;
      } else {
        best_ = null;
        bestBuilder_ = null;
      }
      if (allBuilder_ == null) {
        all_ = null;
      } else {
        all_ = null;
        allBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SentenceWordAnalysisProto_descriptor;
    }

    @java.lang.Override
    public zemberek.proto.morphology.SentenceWordAnalysisProto getDefaultInstanceForType() {
      return zemberek.proto.morphology.SentenceWordAnalysisProto.getDefaultInstance();
    }

    @java.lang.Override
    public zemberek.proto.morphology.SentenceWordAnalysisProto build() {
      zemberek.proto.morphology.SentenceWordAnalysisProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public zemberek.proto.morphology.SentenceWordAnalysisProto buildPartial() {
      zemberek.proto.morphology.SentenceWordAnalysisProto result = new zemberek.proto.morphology.SentenceWordAnalysisProto(this);
      result.token_ = token_;
      if (bestBuilder_ == null) {
        result.best_ = best_;
      } else {
        result.best_ = bestBuilder_.build();
      }
      if (allBuilder_ == null) {
        result.all_ = all_;
      } else {
        result.all_ = allBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof zemberek.proto.morphology.SentenceWordAnalysisProto) {
        return mergeFrom((zemberek.proto.morphology.SentenceWordAnalysisProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(zemberek.proto.morphology.SentenceWordAnalysisProto other) {
      if (other == zemberek.proto.morphology.SentenceWordAnalysisProto.getDefaultInstance()) return this;
      if (!other.getToken().isEmpty()) {
        token_ = other.token_;
        onChanged();
      }
      if (other.hasBest()) {
        mergeBest(other.getBest());
      }
      if (other.hasAll()) {
        mergeAll(other.getAll());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      zemberek.proto.morphology.SentenceWordAnalysisProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (zemberek.proto.morphology.SentenceWordAnalysisProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object token_ = "";
    /**
     * <code>string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string token = 1;</code>
     */
    public Builder setToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      token_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string token = 1;</code>
     */
    public Builder clearToken() {
      
      token_ = getDefaultInstance().getToken();
      onChanged();
      return this;
    }
    /**
     * <code>string token = 1;</code>
     */
    public Builder setTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      token_ = value;
      onChanged();
      return this;
    }

    private zemberek.proto.morphology.SingleAnalysisProto best_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.SingleAnalysisProto, zemberek.proto.morphology.SingleAnalysisProto.Builder, zemberek.proto.morphology.SingleAnalysisProtoOrBuilder> bestBuilder_;
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public boolean hasBest() {
      return bestBuilder_ != null || best_ != null;
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public zemberek.proto.morphology.SingleAnalysisProto getBest() {
      if (bestBuilder_ == null) {
        return best_ == null ? zemberek.proto.morphology.SingleAnalysisProto.getDefaultInstance() : best_;
      } else {
        return bestBuilder_.getMessage();
      }
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public Builder setBest(zemberek.proto.morphology.SingleAnalysisProto value) {
      if (bestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        best_ = value;
        onChanged();
      } else {
        bestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public Builder setBest(
        zemberek.proto.morphology.SingleAnalysisProto.Builder builderForValue) {
      if (bestBuilder_ == null) {
        best_ = builderForValue.build();
        onChanged();
      } else {
        bestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public Builder mergeBest(zemberek.proto.morphology.SingleAnalysisProto value) {
      if (bestBuilder_ == null) {
        if (best_ != null) {
          best_ =
            zemberek.proto.morphology.SingleAnalysisProto.newBuilder(best_).mergeFrom(value).buildPartial();
        } else {
          best_ = value;
        }
        onChanged();
      } else {
        bestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public Builder clearBest() {
      if (bestBuilder_ == null) {
        best_ = null;
        onChanged();
      } else {
        best_ = null;
        bestBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public zemberek.proto.morphology.SingleAnalysisProto.Builder getBestBuilder() {
      
      onChanged();
      return getBestFieldBuilder().getBuilder();
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    public zemberek.proto.morphology.SingleAnalysisProtoOrBuilder getBestOrBuilder() {
      if (bestBuilder_ != null) {
        return bestBuilder_.getMessageOrBuilder();
      } else {
        return best_ == null ?
            zemberek.proto.morphology.SingleAnalysisProto.getDefaultInstance() : best_;
      }
    }
    /**
     * <code>.zemberek.morphology.SingleAnalysisProto best = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.SingleAnalysisProto, zemberek.proto.morphology.SingleAnalysisProto.Builder, zemberek.proto.morphology.SingleAnalysisProtoOrBuilder> 
        getBestFieldBuilder() {
      if (bestBuilder_ == null) {
        bestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zemberek.proto.morphology.SingleAnalysisProto, zemberek.proto.morphology.SingleAnalysisProto.Builder, zemberek.proto.morphology.SingleAnalysisProtoOrBuilder>(
                getBest(),
                getParentForChildren(),
                isClean());
        best_ = null;
      }
      return bestBuilder_;
    }

    private zemberek.proto.morphology.WordAnalysisProto all_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.WordAnalysisProto, zemberek.proto.morphology.WordAnalysisProto.Builder, zemberek.proto.morphology.WordAnalysisProtoOrBuilder> allBuilder_;
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public boolean hasAll() {
      return allBuilder_ != null || all_ != null;
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public zemberek.proto.morphology.WordAnalysisProto getAll() {
      if (allBuilder_ == null) {
        return all_ == null ? zemberek.proto.morphology.WordAnalysisProto.getDefaultInstance() : all_;
      } else {
        return allBuilder_.getMessage();
      }
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public Builder setAll(zemberek.proto.morphology.WordAnalysisProto value) {
      if (allBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        all_ = value;
        onChanged();
      } else {
        allBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public Builder setAll(
        zemberek.proto.morphology.WordAnalysisProto.Builder builderForValue) {
      if (allBuilder_ == null) {
        all_ = builderForValue.build();
        onChanged();
      } else {
        allBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public Builder mergeAll(zemberek.proto.morphology.WordAnalysisProto value) {
      if (allBuilder_ == null) {
        if (all_ != null) {
          all_ =
            zemberek.proto.morphology.WordAnalysisProto.newBuilder(all_).mergeFrom(value).buildPartial();
        } else {
          all_ = value;
        }
        onChanged();
      } else {
        allBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public Builder clearAll() {
      if (allBuilder_ == null) {
        all_ = null;
        onChanged();
      } else {
        all_ = null;
        allBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public zemberek.proto.morphology.WordAnalysisProto.Builder getAllBuilder() {
      
      onChanged();
      return getAllFieldBuilder().getBuilder();
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    public zemberek.proto.morphology.WordAnalysisProtoOrBuilder getAllOrBuilder() {
      if (allBuilder_ != null) {
        return allBuilder_.getMessageOrBuilder();
      } else {
        return all_ == null ?
            zemberek.proto.morphology.WordAnalysisProto.getDefaultInstance() : all_;
      }
    }
    /**
     * <code>.zemberek.morphology.WordAnalysisProto all = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.WordAnalysisProto, zemberek.proto.morphology.WordAnalysisProto.Builder, zemberek.proto.morphology.WordAnalysisProtoOrBuilder> 
        getAllFieldBuilder() {
      if (allBuilder_ == null) {
        allBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zemberek.proto.morphology.WordAnalysisProto, zemberek.proto.morphology.WordAnalysisProto.Builder, zemberek.proto.morphology.WordAnalysisProtoOrBuilder>(
                getAll(),
                getParentForChildren(),
                isClean());
        all_ = null;
      }
      return allBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zemberek.morphology.SentenceWordAnalysisProto)
  }

  // @@protoc_insertion_point(class_scope:zemberek.morphology.SentenceWordAnalysisProto)
  private static final zemberek.proto.morphology.SentenceWordAnalysisProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new zemberek.proto.morphology.SentenceWordAnalysisProto();
  }

  public static zemberek.proto.morphology.SentenceWordAnalysisProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SentenceWordAnalysisProto>
      PARSER = new com.google.protobuf.AbstractParser<SentenceWordAnalysisProto>() {
    @java.lang.Override
    public SentenceWordAnalysisProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SentenceWordAnalysisProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SentenceWordAnalysisProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SentenceWordAnalysisProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public zemberek.proto.morphology.SentenceWordAnalysisProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

