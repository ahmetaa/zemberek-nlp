// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: morphology.proto

package zemberek.proto.morphology;

/**
 * <pre>
 * represents a single morphological analysis result.
 * </pre>
 *
 * Protobuf type {@code zemberek.morphology.SingleAnalysisProto}
 */
public  final class SingleAnalysisProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zemberek.morphology.SingleAnalysisProto)
    SingleAnalysisProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SingleAnalysisProto.newBuilder() to construct.
  private SingleAnalysisProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SingleAnalysisProto() {
    pos_ = "";
    analysis_ = "";
    informal_ = false;
    runtime_ = false;
    lemmas_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    morphemes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SingleAnalysisProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            pos_ = s;
            break;
          }
          case 18: {
            zemberek.proto.morphology.DictionaryItemProto.Builder subBuilder = null;
            if (dictionaryItem_ != null) {
              subBuilder = dictionaryItem_.toBuilder();
            }
            dictionaryItem_ = input.readMessage(zemberek.proto.morphology.DictionaryItemProto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dictionaryItem_);
              dictionaryItem_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            analysis_ = s;
            break;
          }
          case 32: {

            informal_ = input.readBool();
            break;
          }
          case 40: {

            runtime_ = input.readBool();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              lemmas_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000020;
            }
            lemmas_.add(s);
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              morphemes_ = new java.util.ArrayList<zemberek.proto.morphology.MorphemeDataProto>();
              mutable_bitField0_ |= 0x00000040;
            }
            morphemes_.add(
                input.readMessage(zemberek.proto.morphology.MorphemeDataProto.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        lemmas_ = lemmas_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        morphemes_ = java.util.Collections.unmodifiableList(morphemes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SingleAnalysisProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SingleAnalysisProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            zemberek.proto.morphology.SingleAnalysisProto.class, zemberek.proto.morphology.SingleAnalysisProto.Builder.class);
  }

  private int bitField0_;
  public static final int POS_FIELD_NUMBER = 1;
  private volatile java.lang.Object pos_;
  /**
   * <pre>
   * Defines the POS of the whole word.
   * </pre>
   *
   * <code>string pos = 1;</code>
   */
  public java.lang.String getPos() {
    java.lang.Object ref = pos_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pos_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Defines the POS of the whole word.
   * </pre>
   *
   * <code>string pos = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPosBytes() {
    java.lang.Object ref = pos_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pos_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DICTIONARYITEM_FIELD_NUMBER = 2;
  private zemberek.proto.morphology.DictionaryItemProto dictionaryItem_;
  /**
   * <pre>
   * root word's dictionary information (contains lemma and pos values.)
   * </pre>
   *
   * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
   */
  public boolean hasDictionaryItem() {
    return dictionaryItem_ != null;
  }
  /**
   * <pre>
   * root word's dictionary information (contains lemma and pos values.)
   * </pre>
   *
   * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
   */
  public zemberek.proto.morphology.DictionaryItemProto getDictionaryItem() {
    return dictionaryItem_ == null ? zemberek.proto.morphology.DictionaryItemProto.getDefaultInstance() : dictionaryItem_;
  }
  /**
   * <pre>
   * root word's dictionary information (contains lemma and pos values.)
   * </pre>
   *
   * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
   */
  public zemberek.proto.morphology.DictionaryItemProtoOrBuilder getDictionaryItemOrBuilder() {
    return getDictionaryItem();
  }

  public static final int ANALYSIS_FIELD_NUMBER = 3;
  private volatile java.lang.Object analysis_;
  /**
   * <pre>
   * This is the long formatted analysis string.
   * </pre>
   *
   * <code>string analysis = 3;</code>
   */
  public java.lang.String getAnalysis() {
    java.lang.Object ref = analysis_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      analysis_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * This is the long formatted analysis string.
   * </pre>
   *
   * <code>string analysis = 3;</code>
   */
  public com.google.protobuf.ByteString
      getAnalysisBytes() {
    java.lang.Object ref = analysis_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      analysis_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INFORMAL_FIELD_NUMBER = 4;
  private boolean informal_;
  /**
   * <pre>
   * [true] if this analysis contain informal morphemes.
   * </pre>
   *
   * <code>bool informal = 4;</code>
   */
  public boolean getInformal() {
    return informal_;
  }

  public static final int RUNTIME_FIELD_NUMBER = 5;
  private boolean runtime_;
  /**
   * <pre>
   * [true] if this root form of the input does not exist in dictionary.
   * </pre>
   *
   * <code>bool runtime = 5;</code>
   */
  public boolean getRuntime() {
    return runtime_;
  }

  public static final int LEMMAS_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList lemmas_;
  /**
   * <pre>
   * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
   * </pre>
   *
   * <code>repeated string lemmas = 6;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getLemmasList() {
    return lemmas_;
  }
  /**
   * <pre>
   * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
   * </pre>
   *
   * <code>repeated string lemmas = 6;</code>
   */
  public int getLemmasCount() {
    return lemmas_.size();
  }
  /**
   * <pre>
   * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
   * </pre>
   *
   * <code>repeated string lemmas = 6;</code>
   */
  public java.lang.String getLemmas(int index) {
    return lemmas_.get(index);
  }
  /**
   * <pre>
   * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
   * </pre>
   *
   * <code>repeated string lemmas = 6;</code>
   */
  public com.google.protobuf.ByteString
      getLemmasBytes(int index) {
    return lemmas_.getByteString(index);
  }

  public static final int MORPHEMES_FIELD_NUMBER = 7;
  private java.util.List<zemberek.proto.morphology.MorphemeDataProto> morphemes_;
  /**
   * <pre>
   * all morpheme information.
   * </pre>
   *
   * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
   */
  public java.util.List<zemberek.proto.morphology.MorphemeDataProto> getMorphemesList() {
    return morphemes_;
  }
  /**
   * <pre>
   * all morpheme information.
   * </pre>
   *
   * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
   */
  public java.util.List<? extends zemberek.proto.morphology.MorphemeDataProtoOrBuilder> 
      getMorphemesOrBuilderList() {
    return morphemes_;
  }
  /**
   * <pre>
   * all morpheme information.
   * </pre>
   *
   * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
   */
  public int getMorphemesCount() {
    return morphemes_.size();
  }
  /**
   * <pre>
   * all morpheme information.
   * </pre>
   *
   * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
   */
  public zemberek.proto.morphology.MorphemeDataProto getMorphemes(int index) {
    return morphemes_.get(index);
  }
  /**
   * <pre>
   * all morpheme information.
   * </pre>
   *
   * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
   */
  public zemberek.proto.morphology.MorphemeDataProtoOrBuilder getMorphemesOrBuilder(
      int index) {
    return morphemes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getPosBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, pos_);
    }
    if (dictionaryItem_ != null) {
      output.writeMessage(2, getDictionaryItem());
    }
    if (!getAnalysisBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, analysis_);
    }
    if (informal_ != false) {
      output.writeBool(4, informal_);
    }
    if (runtime_ != false) {
      output.writeBool(5, runtime_);
    }
    for (int i = 0; i < lemmas_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, lemmas_.getRaw(i));
    }
    for (int i = 0; i < morphemes_.size(); i++) {
      output.writeMessage(7, morphemes_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getPosBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, pos_);
    }
    if (dictionaryItem_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDictionaryItem());
    }
    if (!getAnalysisBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, analysis_);
    }
    if (informal_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, informal_);
    }
    if (runtime_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, runtime_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < lemmas_.size(); i++) {
        dataSize += computeStringSizeNoTag(lemmas_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getLemmasList().size();
    }
    for (int i = 0; i < morphemes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, morphemes_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof zemberek.proto.morphology.SingleAnalysisProto)) {
      return super.equals(obj);
    }
    zemberek.proto.morphology.SingleAnalysisProto other = (zemberek.proto.morphology.SingleAnalysisProto) obj;

    boolean result = true;
    result = result && getPos()
        .equals(other.getPos());
    result = result && (hasDictionaryItem() == other.hasDictionaryItem());
    if (hasDictionaryItem()) {
      result = result && getDictionaryItem()
          .equals(other.getDictionaryItem());
    }
    result = result && getAnalysis()
        .equals(other.getAnalysis());
    result = result && (getInformal()
        == other.getInformal());
    result = result && (getRuntime()
        == other.getRuntime());
    result = result && getLemmasList()
        .equals(other.getLemmasList());
    result = result && getMorphemesList()
        .equals(other.getMorphemesList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + POS_FIELD_NUMBER;
    hash = (53 * hash) + getPos().hashCode();
    if (hasDictionaryItem()) {
      hash = (37 * hash) + DICTIONARYITEM_FIELD_NUMBER;
      hash = (53 * hash) + getDictionaryItem().hashCode();
    }
    hash = (37 * hash) + ANALYSIS_FIELD_NUMBER;
    hash = (53 * hash) + getAnalysis().hashCode();
    hash = (37 * hash) + INFORMAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInformal());
    hash = (37 * hash) + RUNTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRuntime());
    if (getLemmasCount() > 0) {
      hash = (37 * hash) + LEMMAS_FIELD_NUMBER;
      hash = (53 * hash) + getLemmasList().hashCode();
    }
    if (getMorphemesCount() > 0) {
      hash = (37 * hash) + MORPHEMES_FIELD_NUMBER;
      hash = (53 * hash) + getMorphemesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zemberek.proto.morphology.SingleAnalysisProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(zemberek.proto.morphology.SingleAnalysisProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * represents a single morphological analysis result.
   * </pre>
   *
   * Protobuf type {@code zemberek.morphology.SingleAnalysisProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zemberek.morphology.SingleAnalysisProto)
      zemberek.proto.morphology.SingleAnalysisProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SingleAnalysisProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SingleAnalysisProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zemberek.proto.morphology.SingleAnalysisProto.class, zemberek.proto.morphology.SingleAnalysisProto.Builder.class);
    }

    // Construct using zemberek.proto.morphology.SingleAnalysisProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMorphemesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pos_ = "";

      if (dictionaryItemBuilder_ == null) {
        dictionaryItem_ = null;
      } else {
        dictionaryItem_ = null;
        dictionaryItemBuilder_ = null;
      }
      analysis_ = "";

      informal_ = false;

      runtime_ = false;

      lemmas_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (morphemesBuilder_ == null) {
        morphemes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        morphemesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return zemberek.proto.morphology.Morphology.internal_static_zemberek_morphology_SingleAnalysisProto_descriptor;
    }

    @java.lang.Override
    public zemberek.proto.morphology.SingleAnalysisProto getDefaultInstanceForType() {
      return zemberek.proto.morphology.SingleAnalysisProto.getDefaultInstance();
    }

    @java.lang.Override
    public zemberek.proto.morphology.SingleAnalysisProto build() {
      zemberek.proto.morphology.SingleAnalysisProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public zemberek.proto.morphology.SingleAnalysisProto buildPartial() {
      zemberek.proto.morphology.SingleAnalysisProto result = new zemberek.proto.morphology.SingleAnalysisProto(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.pos_ = pos_;
      if (dictionaryItemBuilder_ == null) {
        result.dictionaryItem_ = dictionaryItem_;
      } else {
        result.dictionaryItem_ = dictionaryItemBuilder_.build();
      }
      result.analysis_ = analysis_;
      result.informal_ = informal_;
      result.runtime_ = runtime_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        lemmas_ = lemmas_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.lemmas_ = lemmas_;
      if (morphemesBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          morphemes_ = java.util.Collections.unmodifiableList(morphemes_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.morphemes_ = morphemes_;
      } else {
        result.morphemes_ = morphemesBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof zemberek.proto.morphology.SingleAnalysisProto) {
        return mergeFrom((zemberek.proto.morphology.SingleAnalysisProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(zemberek.proto.morphology.SingleAnalysisProto other) {
      if (other == zemberek.proto.morphology.SingleAnalysisProto.getDefaultInstance()) return this;
      if (!other.getPos().isEmpty()) {
        pos_ = other.pos_;
        onChanged();
      }
      if (other.hasDictionaryItem()) {
        mergeDictionaryItem(other.getDictionaryItem());
      }
      if (!other.getAnalysis().isEmpty()) {
        analysis_ = other.analysis_;
        onChanged();
      }
      if (other.getInformal() != false) {
        setInformal(other.getInformal());
      }
      if (other.getRuntime() != false) {
        setRuntime(other.getRuntime());
      }
      if (!other.lemmas_.isEmpty()) {
        if (lemmas_.isEmpty()) {
          lemmas_ = other.lemmas_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureLemmasIsMutable();
          lemmas_.addAll(other.lemmas_);
        }
        onChanged();
      }
      if (morphemesBuilder_ == null) {
        if (!other.morphemes_.isEmpty()) {
          if (morphemes_.isEmpty()) {
            morphemes_ = other.morphemes_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMorphemesIsMutable();
            morphemes_.addAll(other.morphemes_);
          }
          onChanged();
        }
      } else {
        if (!other.morphemes_.isEmpty()) {
          if (morphemesBuilder_.isEmpty()) {
            morphemesBuilder_.dispose();
            morphemesBuilder_ = null;
            morphemes_ = other.morphemes_;
            bitField0_ = (bitField0_ & ~0x00000040);
            morphemesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMorphemesFieldBuilder() : null;
          } else {
            morphemesBuilder_.addAllMessages(other.morphemes_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      zemberek.proto.morphology.SingleAnalysisProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (zemberek.proto.morphology.SingleAnalysisProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object pos_ = "";
    /**
     * <pre>
     * Defines the POS of the whole word.
     * </pre>
     *
     * <code>string pos = 1;</code>
     */
    public java.lang.String getPos() {
      java.lang.Object ref = pos_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pos_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Defines the POS of the whole word.
     * </pre>
     *
     * <code>string pos = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPosBytes() {
      java.lang.Object ref = pos_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pos_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Defines the POS of the whole word.
     * </pre>
     *
     * <code>string pos = 1;</code>
     */
    public Builder setPos(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the POS of the whole word.
     * </pre>
     *
     * <code>string pos = 1;</code>
     */
    public Builder clearPos() {
      
      pos_ = getDefaultInstance().getPos();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the POS of the whole word.
     * </pre>
     *
     * <code>string pos = 1;</code>
     */
    public Builder setPosBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pos_ = value;
      onChanged();
      return this;
    }

    private zemberek.proto.morphology.DictionaryItemProto dictionaryItem_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.DictionaryItemProto, zemberek.proto.morphology.DictionaryItemProto.Builder, zemberek.proto.morphology.DictionaryItemProtoOrBuilder> dictionaryItemBuilder_;
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public boolean hasDictionaryItem() {
      return dictionaryItemBuilder_ != null || dictionaryItem_ != null;
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public zemberek.proto.morphology.DictionaryItemProto getDictionaryItem() {
      if (dictionaryItemBuilder_ == null) {
        return dictionaryItem_ == null ? zemberek.proto.morphology.DictionaryItemProto.getDefaultInstance() : dictionaryItem_;
      } else {
        return dictionaryItemBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public Builder setDictionaryItem(zemberek.proto.morphology.DictionaryItemProto value) {
      if (dictionaryItemBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dictionaryItem_ = value;
        onChanged();
      } else {
        dictionaryItemBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public Builder setDictionaryItem(
        zemberek.proto.morphology.DictionaryItemProto.Builder builderForValue) {
      if (dictionaryItemBuilder_ == null) {
        dictionaryItem_ = builderForValue.build();
        onChanged();
      } else {
        dictionaryItemBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public Builder mergeDictionaryItem(zemberek.proto.morphology.DictionaryItemProto value) {
      if (dictionaryItemBuilder_ == null) {
        if (dictionaryItem_ != null) {
          dictionaryItem_ =
            zemberek.proto.morphology.DictionaryItemProto.newBuilder(dictionaryItem_).mergeFrom(value).buildPartial();
        } else {
          dictionaryItem_ = value;
        }
        onChanged();
      } else {
        dictionaryItemBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public Builder clearDictionaryItem() {
      if (dictionaryItemBuilder_ == null) {
        dictionaryItem_ = null;
        onChanged();
      } else {
        dictionaryItem_ = null;
        dictionaryItemBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public zemberek.proto.morphology.DictionaryItemProto.Builder getDictionaryItemBuilder() {
      
      onChanged();
      return getDictionaryItemFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    public zemberek.proto.morphology.DictionaryItemProtoOrBuilder getDictionaryItemOrBuilder() {
      if (dictionaryItemBuilder_ != null) {
        return dictionaryItemBuilder_.getMessageOrBuilder();
      } else {
        return dictionaryItem_ == null ?
            zemberek.proto.morphology.DictionaryItemProto.getDefaultInstance() : dictionaryItem_;
      }
    }
    /**
     * <pre>
     * root word's dictionary information (contains lemma and pos values.)
     * </pre>
     *
     * <code>.zemberek.morphology.DictionaryItemProto dictionaryItem = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zemberek.proto.morphology.DictionaryItemProto, zemberek.proto.morphology.DictionaryItemProto.Builder, zemberek.proto.morphology.DictionaryItemProtoOrBuilder> 
        getDictionaryItemFieldBuilder() {
      if (dictionaryItemBuilder_ == null) {
        dictionaryItemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zemberek.proto.morphology.DictionaryItemProto, zemberek.proto.morphology.DictionaryItemProto.Builder, zemberek.proto.morphology.DictionaryItemProtoOrBuilder>(
                getDictionaryItem(),
                getParentForChildren(),
                isClean());
        dictionaryItem_ = null;
      }
      return dictionaryItemBuilder_;
    }

    private java.lang.Object analysis_ = "";
    /**
     * <pre>
     * This is the long formatted analysis string.
     * </pre>
     *
     * <code>string analysis = 3;</code>
     */
    public java.lang.String getAnalysis() {
      java.lang.Object ref = analysis_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        analysis_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * This is the long formatted analysis string.
     * </pre>
     *
     * <code>string analysis = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAnalysisBytes() {
      java.lang.Object ref = analysis_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        analysis_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * This is the long formatted analysis string.
     * </pre>
     *
     * <code>string analysis = 3;</code>
     */
    public Builder setAnalysis(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      analysis_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is the long formatted analysis string.
     * </pre>
     *
     * <code>string analysis = 3;</code>
     */
    public Builder clearAnalysis() {
      
      analysis_ = getDefaultInstance().getAnalysis();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This is the long formatted analysis string.
     * </pre>
     *
     * <code>string analysis = 3;</code>
     */
    public Builder setAnalysisBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      analysis_ = value;
      onChanged();
      return this;
    }

    private boolean informal_ ;
    /**
     * <pre>
     * [true] if this analysis contain informal morphemes.
     * </pre>
     *
     * <code>bool informal = 4;</code>
     */
    public boolean getInformal() {
      return informal_;
    }
    /**
     * <pre>
     * [true] if this analysis contain informal morphemes.
     * </pre>
     *
     * <code>bool informal = 4;</code>
     */
    public Builder setInformal(boolean value) {
      
      informal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [true] if this analysis contain informal morphemes.
     * </pre>
     *
     * <code>bool informal = 4;</code>
     */
    public Builder clearInformal() {
      
      informal_ = false;
      onChanged();
      return this;
    }

    private boolean runtime_ ;
    /**
     * <pre>
     * [true] if this root form of the input does not exist in dictionary.
     * </pre>
     *
     * <code>bool runtime = 5;</code>
     */
    public boolean getRuntime() {
      return runtime_;
    }
    /**
     * <pre>
     * [true] if this root form of the input does not exist in dictionary.
     * </pre>
     *
     * <code>bool runtime = 5;</code>
     */
    public Builder setRuntime(boolean value) {
      
      runtime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [true] if this root form of the input does not exist in dictionary.
     * </pre>
     *
     * <code>bool runtime = 5;</code>
     */
    public Builder clearRuntime() {
      
      runtime_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList lemmas_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureLemmasIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        lemmas_ = new com.google.protobuf.LazyStringArrayList(lemmas_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getLemmasList() {
      return lemmas_.getUnmodifiableView();
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public int getLemmasCount() {
      return lemmas_.size();
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public java.lang.String getLemmas(int index) {
      return lemmas_.get(index);
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLemmasBytes(int index) {
      return lemmas_.getByteString(index);
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public Builder setLemmas(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLemmasIsMutable();
      lemmas_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public Builder addLemmas(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureLemmasIsMutable();
      lemmas_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public Builder addAllLemmas(
        java.lang.Iterable<java.lang.String> values) {
      ensureLemmasIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, lemmas_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public Builder clearLemmas() {
      lemmas_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * all lemma values. Such as for input "kapattırdım" -&gt; ["kapat","kapattır"]
     * </pre>
     *
     * <code>repeated string lemmas = 6;</code>
     */
    public Builder addLemmasBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureLemmasIsMutable();
      lemmas_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<zemberek.proto.morphology.MorphemeDataProto> morphemes_ =
      java.util.Collections.emptyList();
    private void ensureMorphemesIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        morphemes_ = new java.util.ArrayList<zemberek.proto.morphology.MorphemeDataProto>(morphemes_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        zemberek.proto.morphology.MorphemeDataProto, zemberek.proto.morphology.MorphemeDataProto.Builder, zemberek.proto.morphology.MorphemeDataProtoOrBuilder> morphemesBuilder_;

    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public java.util.List<zemberek.proto.morphology.MorphemeDataProto> getMorphemesList() {
      if (morphemesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(morphemes_);
      } else {
        return morphemesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public int getMorphemesCount() {
      if (morphemesBuilder_ == null) {
        return morphemes_.size();
      } else {
        return morphemesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public zemberek.proto.morphology.MorphemeDataProto getMorphemes(int index) {
      if (morphemesBuilder_ == null) {
        return morphemes_.get(index);
      } else {
        return morphemesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder setMorphemes(
        int index, zemberek.proto.morphology.MorphemeDataProto value) {
      if (morphemesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMorphemesIsMutable();
        morphemes_.set(index, value);
        onChanged();
      } else {
        morphemesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder setMorphemes(
        int index, zemberek.proto.morphology.MorphemeDataProto.Builder builderForValue) {
      if (morphemesBuilder_ == null) {
        ensureMorphemesIsMutable();
        morphemes_.set(index, builderForValue.build());
        onChanged();
      } else {
        morphemesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder addMorphemes(zemberek.proto.morphology.MorphemeDataProto value) {
      if (morphemesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMorphemesIsMutable();
        morphemes_.add(value);
        onChanged();
      } else {
        morphemesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder addMorphemes(
        int index, zemberek.proto.morphology.MorphemeDataProto value) {
      if (morphemesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMorphemesIsMutable();
        morphemes_.add(index, value);
        onChanged();
      } else {
        morphemesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder addMorphemes(
        zemberek.proto.morphology.MorphemeDataProto.Builder builderForValue) {
      if (morphemesBuilder_ == null) {
        ensureMorphemesIsMutable();
        morphemes_.add(builderForValue.build());
        onChanged();
      } else {
        morphemesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder addMorphemes(
        int index, zemberek.proto.morphology.MorphemeDataProto.Builder builderForValue) {
      if (morphemesBuilder_ == null) {
        ensureMorphemesIsMutable();
        morphemes_.add(index, builderForValue.build());
        onChanged();
      } else {
        morphemesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder addAllMorphemes(
        java.lang.Iterable<? extends zemberek.proto.morphology.MorphemeDataProto> values) {
      if (morphemesBuilder_ == null) {
        ensureMorphemesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, morphemes_);
        onChanged();
      } else {
        morphemesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder clearMorphemes() {
      if (morphemesBuilder_ == null) {
        morphemes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        morphemesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public Builder removeMorphemes(int index) {
      if (morphemesBuilder_ == null) {
        ensureMorphemesIsMutable();
        morphemes_.remove(index);
        onChanged();
      } else {
        morphemesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public zemberek.proto.morphology.MorphemeDataProto.Builder getMorphemesBuilder(
        int index) {
      return getMorphemesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public zemberek.proto.morphology.MorphemeDataProtoOrBuilder getMorphemesOrBuilder(
        int index) {
      if (morphemesBuilder_ == null) {
        return morphemes_.get(index);  } else {
        return morphemesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public java.util.List<? extends zemberek.proto.morphology.MorphemeDataProtoOrBuilder> 
         getMorphemesOrBuilderList() {
      if (morphemesBuilder_ != null) {
        return morphemesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(morphemes_);
      }
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public zemberek.proto.morphology.MorphemeDataProto.Builder addMorphemesBuilder() {
      return getMorphemesFieldBuilder().addBuilder(
          zemberek.proto.morphology.MorphemeDataProto.getDefaultInstance());
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public zemberek.proto.morphology.MorphemeDataProto.Builder addMorphemesBuilder(
        int index) {
      return getMorphemesFieldBuilder().addBuilder(
          index, zemberek.proto.morphology.MorphemeDataProto.getDefaultInstance());
    }
    /**
     * <pre>
     * all morpheme information.
     * </pre>
     *
     * <code>repeated .zemberek.morphology.MorphemeDataProto morphemes = 7;</code>
     */
    public java.util.List<zemberek.proto.morphology.MorphemeDataProto.Builder> 
         getMorphemesBuilderList() {
      return getMorphemesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        zemberek.proto.morphology.MorphemeDataProto, zemberek.proto.morphology.MorphemeDataProto.Builder, zemberek.proto.morphology.MorphemeDataProtoOrBuilder> 
        getMorphemesFieldBuilder() {
      if (morphemesBuilder_ == null) {
        morphemesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            zemberek.proto.morphology.MorphemeDataProto, zemberek.proto.morphology.MorphemeDataProto.Builder, zemberek.proto.morphology.MorphemeDataProtoOrBuilder>(
                morphemes_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        morphemes_ = null;
      }
      return morphemesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:zemberek.morphology.SingleAnalysisProto)
  }

  // @@protoc_insertion_point(class_scope:zemberek.morphology.SingleAnalysisProto)
  private static final zemberek.proto.morphology.SingleAnalysisProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new zemberek.proto.morphology.SingleAnalysisProto();
  }

  public static zemberek.proto.morphology.SingleAnalysisProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SingleAnalysisProto>
      PARSER = new com.google.protobuf.AbstractParser<SingleAnalysisProto>() {
    @java.lang.Override
    public SingleAnalysisProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SingleAnalysisProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SingleAnalysisProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SingleAnalysisProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public zemberek.proto.morphology.SingleAnalysisProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

