// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: preprocess.proto

package zemberek.proto;

public final class Preprocess {
  private Preprocess() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zemberek_preprocessor_TokenizationRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zemberek_preprocessor_TokenizationRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zemberek_preprocessor_TokenProto_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zemberek_preprocessor_TokenProto_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zemberek_preprocessor_TokenizationResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zemberek_preprocessor_TokenizationResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zemberek_preprocessor_SentenceExtractionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zemberek_preprocessor_SentenceExtractionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_zemberek_preprocessor_SentenceExtractionResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_zemberek_preprocessor_SentenceExtractionResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020preprocess.proto\022\025zemberek.preprocesso" +
      "r\"`\n\023TokenizationRequest\022\r\n\005input\030\001 \001(\t\022" +
      "\036\n\026includeTokenBoundaries\030\002 \001(\010\022\032\n\022ignor" +
      "eDoubleQuotes\030\003 \001(\010\"E\n\nTokenProto\022\r\n\005tok" +
      "en\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\r\n\005start\030\003 \001(\005\022\013\n" +
      "\003end\030\004 \001(\005\"I\n\024TokenizationResponse\0221\n\006to" +
      "kens\030\001 \003(\0132!.zemberek.preprocessor.Token" +
      "Proto\"O\n\031SentenceExtractionRequest\022\020\n\010do" +
      "cument\030\001 \001(\t\022 \n\030doNotSplitInDoubleQuotes" +
      "\030\002 \001(\010\"/\n\032SentenceExtractionResponse\022\021\n\t" +
      "sentences\030\001 \003(\t2\364\001\n\024PreprocessingService" +
      "\022c\n\010Tokenize\022*.zemberek.preprocessor.Tok" +
      "enizationRequest\032+.zemberek.preprocessor" +
      ".TokenizationResponse\022w\n\020ExtractSentence" +
      "s\0220.zemberek.preprocessor.SentenceExtrac" +
      "tionRequest\0321.zemberek.preprocessor.Sent" +
      "enceExtractionResponseB\022\n\016zemberek.proto" +
      "P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_zemberek_preprocessor_TokenizationRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_zemberek_preprocessor_TokenizationRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zemberek_preprocessor_TokenizationRequest_descriptor,
        new java.lang.String[] { "Input", "IncludeTokenBoundaries", "IgnoreDoubleQuotes", });
    internal_static_zemberek_preprocessor_TokenProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_zemberek_preprocessor_TokenProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zemberek_preprocessor_TokenProto_descriptor,
        new java.lang.String[] { "Token", "Type", "Start", "End", });
    internal_static_zemberek_preprocessor_TokenizationResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_zemberek_preprocessor_TokenizationResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zemberek_preprocessor_TokenizationResponse_descriptor,
        new java.lang.String[] { "Tokens", });
    internal_static_zemberek_preprocessor_SentenceExtractionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_zemberek_preprocessor_SentenceExtractionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zemberek_preprocessor_SentenceExtractionRequest_descriptor,
        new java.lang.String[] { "Document", "DoNotSplitInDoubleQuotes", });
    internal_static_zemberek_preprocessor_SentenceExtractionResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_zemberek_preprocessor_SentenceExtractionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_zemberek_preprocessor_SentenceExtractionResponse_descriptor,
        new java.lang.String[] { "Sentences", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
